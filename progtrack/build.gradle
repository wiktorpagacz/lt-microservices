plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.5'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'com.google.cloud.tools.jib' version '3.4.2'
}

group = 'com.pagacz'
version = '0.0.2'

def user = System.getProperty("duser")
def pass = System.getProperty("dpassword")

apply plugin: "maven-publish"

task apiJar(type: Jar) {
	from sourceSets.main.output
	include 'com/pagacz/progtrack/model/**'
//	exclude 'com/pagacz/resvault/model/mappers/**'
}

jib {
	from {
		image = 'openjdk:21'
	}
	to {
		image  = 'registry.hub.docker.com/tanoer/progtrackservice'
		tags = [version]
		auth {
			username = user
			password = pass
		}
	}
}

publishing {
	publications {
		api(MavenPublication) {
			groupId 'com.pagacz'
			artifactId 'progtrack'
			version '0.0.2'

			artifact apiJar
		}
	}
}

java {
	sourceCompatibility = '21'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenLocal()
	mavenCentral()
}

jar {
	duplicatesStrategy(DuplicatesStrategy.EXCLUDE)
	manifest {
		attributes(
				'Main-Class': 'com.pagacz.progtrack.ProgtrackApplication'
		)
	}
}

ext {
	set('springCloudVersion', "2023.0.1")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.cloud:spring-cloud-starter-config'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'com.okta.spring:okta-spring-boot-starter:3.0.6'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
